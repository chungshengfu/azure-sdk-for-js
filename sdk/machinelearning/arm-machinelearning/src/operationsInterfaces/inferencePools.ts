/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  InferencePool,
  InferencePoolsListOptionalParams,
  SkuResource,
  InferencePoolsListSkusOptionalParams,
  InferencePoolsDeleteOptionalParams,
  InferencePoolsGetOptionalParams,
  InferencePoolsGetResponse,
  PartialMinimalTrackedResourceWithSkuAndIdentity,
  InferencePoolsUpdateOptionalParams,
  InferencePoolsUpdateResponse,
  InferencePoolsCreateOrUpdateOptionalParams,
  InferencePoolsCreateOrUpdateResponse,
  InferencePoolsGetStatusOptionalParams,
  InferencePoolsGetStatusResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a InferencePools. */
export interface InferencePools {
  /**
   * List InferencePools.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: InferencePoolsListOptionalParams,
  ): PagedAsyncIterableIterator<InferencePool>;
  /**
   * List Inference Pool Skus.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Inference Group name.
   * @param options The options parameters.
   */
  listSkus(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    options?: InferencePoolsListSkusOptionalParams,
  ): PagedAsyncIterableIterator<SkuResource>;
  /**
   * Delete InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    options?: InferencePoolsDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    options?: InferencePoolsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Get InferencePool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    options?: InferencePoolsGetOptionalParams,
  ): Promise<InferencePoolsGetResponse>;
  /**
   * Update InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param body Inference Pool entity to apply during operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    body: PartialMinimalTrackedResourceWithSkuAndIdentity,
    options?: InferencePoolsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<InferencePoolsUpdateResponse>,
      InferencePoolsUpdateResponse
    >
  >;
  /**
   * Update InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param body Inference Pool entity to apply during operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    body: PartialMinimalTrackedResourceWithSkuAndIdentity,
    options?: InferencePoolsUpdateOptionalParams,
  ): Promise<InferencePoolsUpdateResponse>;
  /**
   * Create or update InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param body InferencePool entity to apply during operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    body: InferencePool,
    options?: InferencePoolsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<InferencePoolsCreateOrUpdateResponse>,
      InferencePoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update InferencePool (asynchronous).
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param body InferencePool entity to apply during operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    body: InferencePool,
    options?: InferencePoolsCreateOrUpdateOptionalParams,
  ): Promise<InferencePoolsCreateOrUpdateResponse>;
  /**
   * Retrieve inference pool status.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param inferencePoolName Name of InferencePool
   * @param options The options parameters.
   */
  getStatus(
    resourceGroupName: string,
    workspaceName: string,
    inferencePoolName: string,
    options?: InferencePoolsGetStatusOptionalParams,
  ): Promise<InferencePoolsGetStatusResponse>;
}
