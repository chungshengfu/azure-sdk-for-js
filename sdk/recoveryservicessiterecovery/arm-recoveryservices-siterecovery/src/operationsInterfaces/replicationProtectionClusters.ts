/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ReplicationProtectionCluster,
  ReplicationProtectionClustersListByReplicationProtectionContainersOptionalParams,
  ReplicationProtectionClustersListOptionalParams,
  ReplicationProtectionClustersGetOptionalParams,
  ReplicationProtectionClustersGetResponse,
  ReplicationProtectionClustersCreateOptionalParams,
  ReplicationProtectionClustersCreateResponse,
  ReplicationProtectionClustersPurgeOptionalParams,
  ReplicationProtectionClustersPurgeResponse,
  ApplyClusterRecoveryPointInput,
  ReplicationProtectionClustersApplyRecoveryPointOptionalParams,
  ReplicationProtectionClustersApplyRecoveryPointResponse,
  ReplicationProtectionClustersFailoverCommitOptionalParams,
  ReplicationProtectionClustersFailoverCommitResponse,
  ReplicationProtectionClustersGetOperationResultsOptionalParams,
  ReplicationProtectionClustersGetOperationResultsResponse,
  ReplicationProtectionClustersRepairReplicationOptionalParams,
  ReplicationProtectionClustersRepairReplicationResponse,
  ClusterTestFailoverInput,
  ReplicationProtectionClustersTestFailoverOptionalParams,
  ReplicationProtectionClustersTestFailoverResponse,
  ClusterTestFailoverCleanupInput,
  ReplicationProtectionClustersTestFailoverCleanupOptionalParams,
  ReplicationProtectionClustersTestFailoverCleanupResponse,
  ClusterUnplannedFailoverInput,
  ReplicationProtectionClustersUnplannedFailoverOptionalParams,
  ReplicationProtectionClustersUnplannedFailoverResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationProtectionClusters. */
export interface ReplicationProtectionClusters {
  /**
   * Gets the list of ASR replication protected clusters in the protection container.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  listByReplicationProtectionContainers(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersListByReplicationProtectionContainersOptionalParams,
  ): PagedAsyncIterableIterator<ReplicationProtectionCluster>;
  /**
   * Gets the list of ASR replication protected clusters in the vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersListOptionalParams,
  ): PagedAsyncIterableIterator<ReplicationProtectionCluster>;
  /**
   * Gets the details of an ASR replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersGetOptionalParams,
  ): Promise<ReplicationProtectionClustersGetResponse>;
  /**
   * The operation to create an ASR replication protection cluster item.
   * @param resourceName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param replicationProtectionCluster Create replication protection cluster Input.
   * @param options The options parameters.
   */
  beginCreate(
    resourceName: string,
    resourceGroupName: string,
    replicationProtectionCluster: ReplicationProtectionCluster,
    options?: ReplicationProtectionClustersCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersCreateResponse>,
      ReplicationProtectionClustersCreateResponse
    >
  >;
  /**
   * The operation to create an ASR replication protection cluster item.
   * @param resourceName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param replicationProtectionCluster Create replication protection cluster Input.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceName: string,
    resourceGroupName: string,
    replicationProtectionCluster: ReplicationProtectionCluster,
    options?: ReplicationProtectionClustersCreateOptionalParams,
  ): Promise<ReplicationProtectionClustersCreateResponse>;
  /**
   * The operation to purge the replication protection cluster. This operation will force delete the
   * replication protection cluster. Use the remove operation on replication protection cluster to
   * perform a clean disable replication protection cluster.
   * @param resourceName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginPurge(
    resourceName: string,
    resourceGroupName: string,
    options?: ReplicationProtectionClustersPurgeOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersPurgeResponse>,
      ReplicationProtectionClustersPurgeResponse
    >
  >;
  /**
   * The operation to purge the replication protection cluster. This operation will force delete the
   * replication protection cluster. Use the remove operation on replication protection cluster to
   * perform a clean disable replication protection cluster.
   * @param resourceName The name of the recovery services vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginPurgeAndWait(
    resourceName: string,
    resourceGroupName: string,
    options?: ReplicationProtectionClustersPurgeOptionalParams,
  ): Promise<ReplicationProtectionClustersPurgeResponse>;
  /**
   * Operation to apply a new cluster recovery point on the Protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param applyClusterRecoveryPointInput Apply recovery point input.
   * @param options The options parameters.
   */
  beginApplyRecoveryPoint(
    resourceGroupName: string,
    applyClusterRecoveryPointInput: ApplyClusterRecoveryPointInput,
    options?: ReplicationProtectionClustersApplyRecoveryPointOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersApplyRecoveryPointResponse>,
      ReplicationProtectionClustersApplyRecoveryPointResponse
    >
  >;
  /**
   * Operation to apply a new cluster recovery point on the Protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param applyClusterRecoveryPointInput Apply recovery point input.
   * @param options The options parameters.
   */
  beginApplyRecoveryPointAndWait(
    resourceGroupName: string,
    applyClusterRecoveryPointInput: ApplyClusterRecoveryPointInput,
    options?: ReplicationProtectionClustersApplyRecoveryPointOptionalParams,
  ): Promise<ReplicationProtectionClustersApplyRecoveryPointResponse>;
  /**
   * Operation to initiate commit failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginFailoverCommit(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersFailoverCommitOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersFailoverCommitResponse>,
      ReplicationProtectionClustersFailoverCommitResponse
    >
  >;
  /**
   * Operation to initiate commit failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginFailoverCommitAndWait(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersFailoverCommitOptionalParams,
  ): Promise<ReplicationProtectionClustersFailoverCommitResponse>;
  /**
   * Track the results of an asynchronous operation on the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param jobId job id to track.
   * @param options The options parameters.
   */
  getOperationResults(
    resourceGroupName: string,
    jobId: string,
    options?: ReplicationProtectionClustersGetOperationResultsOptionalParams,
  ): Promise<ReplicationProtectionClustersGetOperationResultsResponse>;
  /**
   * The operation to repair replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginRepairReplication(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersRepairReplicationOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersRepairReplicationResponse>,
      ReplicationProtectionClustersRepairReplicationResponse
    >
  >;
  /**
   * The operation to repair replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param options The options parameters.
   */
  beginRepairReplicationAndWait(
    resourceGroupName: string,
    options?: ReplicationProtectionClustersRepairReplicationOptionalParams,
  ): Promise<ReplicationProtectionClustersRepairReplicationResponse>;
  /**
   * Operation to initiate a failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginTestFailover(
    resourceGroupName: string,
    failoverInput: ClusterTestFailoverInput,
    options?: ReplicationProtectionClustersTestFailoverOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersTestFailoverResponse>,
      ReplicationProtectionClustersTestFailoverResponse
    >
  >;
  /**
   * Operation to initiate a failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginTestFailoverAndWait(
    resourceGroupName: string,
    failoverInput: ClusterTestFailoverInput,
    options?: ReplicationProtectionClustersTestFailoverOptionalParams,
  ): Promise<ReplicationProtectionClustersTestFailoverResponse>;
  /**
   * Operation to clean up the test failover of a replication protected cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param cleanupInput Test failover cleanup input.
   * @param options The options parameters.
   */
  beginTestFailoverCleanup(
    resourceGroupName: string,
    cleanupInput: ClusterTestFailoverCleanupInput,
    options?: ReplicationProtectionClustersTestFailoverCleanupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersTestFailoverCleanupResponse>,
      ReplicationProtectionClustersTestFailoverCleanupResponse
    >
  >;
  /**
   * Operation to clean up the test failover of a replication protected cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param cleanupInput Test failover cleanup input.
   * @param options The options parameters.
   */
  beginTestFailoverCleanupAndWait(
    resourceGroupName: string,
    cleanupInput: ClusterTestFailoverCleanupInput,
    options?: ReplicationProtectionClustersTestFailoverCleanupOptionalParams,
  ): Promise<ReplicationProtectionClustersTestFailoverCleanupResponse>;
  /**
   * Operation to initiate a failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginUnplannedFailover(
    resourceGroupName: string,
    failoverInput: ClusterUnplannedFailoverInput,
    options?: ReplicationProtectionClustersUnplannedFailoverOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationProtectionClustersUnplannedFailoverResponse>,
      ReplicationProtectionClustersUnplannedFailoverResponse
    >
  >;
  /**
   * Operation to initiate a failover of the replication protection cluster.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginUnplannedFailoverAndWait(
    resourceGroupName: string,
    failoverInput: ClusterUnplannedFailoverInput,
    options?: ReplicationProtectionClustersUnplannedFailoverOptionalParams,
  ): Promise<ReplicationProtectionClustersUnplannedFailoverResponse>;
}
